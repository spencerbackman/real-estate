"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var reply_codes_1 = __importDefault(require("./reply-codes"));
var RetsReplyError = /** @class */ (function (_super) {
    __extends(RetsReplyError, _super);
    function RetsReplyError(retsContext, replyCode, replyText, originalError) {
        var _this = _super.call(this) || this;
        _this.name = 'RetsReplyError';
        _this.replyCode = replyCode;
        _this.replyText = replyText;
        _this.originalError = originalError;
        _this.retsMethod = retsContext.retsMethod;
        _this.replyTag = reply_codes_1.default[_this.replyCode] ? reply_codes_1.default[_this.replyCode] : 'unknown reply code';
        _this.message = "RETS Server reply while attempting " + _this.retsMethod + " - ReplyCode " + _this.replyCode + " (" + _this.replyTag + "); ReplyText: " + _this.replyText;
        Error.captureStackTrace(_this, RetsReplyError);
        return _this;
    }
    return RetsReplyError;
}(Error));
exports.default = RetsReplyError;
//# sourceMappingURL=rets-reply-error.js.map